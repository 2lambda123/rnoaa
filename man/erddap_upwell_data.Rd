% Generated by roxygen2 (4.0.2): do not edit by hand
\name{erddap_upwell_data}
\alias{erddap_upwell_data}
\title{Get ERDDAP UPWELL data.}
\usage{
erddap_upwell_data(.info, ..., fields = "all", stride = 1,
  path = "~/.rnoaa/upwell", overwrite = TRUE, callopts = list())
}
\arguments{
\item{stride}{(integer) How many values to get. 1 = get every value, 2 = get every other value,
etc. Default: 1 (i.e., get every value)}

\item{time}{}

\item{altitude}{}

\item{latitude}{}

\item{longitude}{}
}
\description{
Get ERDDAP UPWELL data.
}
\details{
Some details:
}
\section{Dimensions and Variables}{

ERDDAP grid dap data has this concept of dimenions vs. variables. So, dimensions are things
like time, latitude, longitude, and altitude. Whereas variables are the measured variables,
e.g., temperature, salinity, and air.

You can't separately adjust values for dimensions for different variables. So, here's how it's
gonna work:

Pass in lower and upper limits you want for each dimension as a vector (e.g., \code{c(1,2)}),
or leave to defaults (i.e., don't pass anything to a dimension). Then pick which variables
you want returned via the \code{fields} parameter. If you don't pass in options to the
\code{fields} parameter, you get all variables back.

To get the dimensions and variables, along with other metadata for a dataset, run
\code{erddap_upwell_info}, and each will be shown, with their min and max values, and some
other metadata.
}

\section{Where does the data go?}{

You can choose where data is stored. Be careful though. You can easily get a single file of
hundreds of MB's or GB's in size with a single request. To the store parameter, pass
\dQuote{memory} if you want to store the data in memory (saved as a data.frame), or
pass \dQuote{disk} if you want to store on disk in a file. Possibly will add other options,
like \dQuote{sql} for storing in a SQL database, though that option would need to be expanded
to various SQL DB options though.
}
\examples{
\dontrun{
# single variable dataset
out <- erddap_upwell_info('noaa_esrl_027d_0fb5_5d38')
summary(out)
(res <- erddap_upwell_data(out,
 time = c('2012-01-01','2012-06-12'),
 latitude = c(21, 18),
 longitude = c(-80, -75)
))

# multi-variable dataset
out <- erddap_upwell_info('noaa_gfdl_5081_7d4a_7570')
summary(out)
(res <- erddap_upwell_data(out,
 time = c('2005-11-01','2006-01-01'),
 latitude = c(20, 21),
 longitude = c(10, 11)
))
(res <- erddap_upwell_data(out, time = c('2005-11-01','2006-01-01'), latitude = c(20, 21),
longitude = c(10, 11), fields = 'uo'))
(res <- erddap_upwell_data(out, time = c('2005-11-01','2006-01-01'), latitude = c(20, 21),
longitude = c(10, 11), fields = 'uo', stride=c(1,2,1,2)))
(res <- erddap_upwell_data(out, time = c('2005-11-01','2006-01-01'), latitude = c(20, 21),
longitude = c(10, 11), fields = c('uo','so')))
(res <- erddap_upwell_data(out, time = c('2005-09-01','2006-01-01'), latitude = c(20, 21),
longitude = c(10, 11), fields = 'none'))

# multi-variable dataset
## this one also has a 0-360 longitude system, BLARGH!!!
out <- erddap_upwell_info('noaa_gfdl_3c96_7879_a9d3')
summary(out)
(res <- erddap_upwell_data(out,
 time = c('2005-11-01','2006-01-01'),
 latitude = c(20, 22),
 longitude = c(-80, -75)
))
(res <- erddap_upwell_data(out,
 time = c('2005-11-01','2006-01-01'),
 latitude = c(20, 22),
 longitude = c(-80, -75),
 depth = c(5, 50)
))

# single variable dataset
out <- erddap_upwell_info('noaa_pfeg_e9ae_3356_22f8')
summary(out)
(res <- erddap_upwell_data(out,
 time = c('2012-06-01','2012-06-12'),
 latitude = c(20, 21),
 longitude = c(-80, -75)
))

dimargs <- list(time=c('2012-06-01','2012-06-12'), latitude=c(20, 21), longitude=c(-80, -75))
}
}

